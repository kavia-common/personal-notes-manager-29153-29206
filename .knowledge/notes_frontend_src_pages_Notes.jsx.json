{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This file defines a React component named 'Notes' that manages a user's notes, providing functionalities such as listing, searching, creating, editing, and deleting notes. It interacts with an API client for data operations and utilizes custom components NoteList and NoteEditor for UI rendering.", "external_files": ["../api/client", "../components/NoteList", "../components/NoteEditor"], "external_methods": ["api.notes.list", "api.notes.remove", "api.notes.update", "api.notes.create"], "published": ["Notes"], "classes": [], "methods": [{"name": "showToast", "description": "Displays a toast message of a given type ('error' or 'success') and automatically clears it after 3 seconds."}, {"name": "fetchNotes", "description": "Fetches notes from the API based on current search query and pagination, updating the component state accordingly."}, {"name": "onEdit", "description": "Sets the selected note for editing and opens the editor modal."}, {"name": "onDelete", "description": "Confirms and deletes a note via the API, then refreshes the notes list."}, {"name": "onSave", "description": "Saves a new or updated note via the API, then refreshes the list and closes the editor."}, {"name": "Notes()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["api.notes.list", "api.notes.remove", "api.notes.update", "api.notes.create", "setNotes", "setTotal", "setLoading", "setEditorOpen", "setEditing", "setToast", "setPage", "window.addEventListener", "window.removeEventListener", "setSearch", "setPage", "setEditorOpen", "setEditing"], "search-terms": ["React hooks", "Notes management", "Note creation/editing", "API interaction", "Pagination", "Search functionality", "Toast notifications"], "state": 2, "file_id": 22, "knowledge_revision": 58, "git_revision": "", "revision_history": [{"46": ""}, {"58": ""}], "ctags": [{"_type": "tag", "name": "Notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29206/notes_frontend/src/pages/Notes.jsx", "pattern": "/^export default function Notes() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "editing", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29206/notes_frontend/src/pages/Notes.jsx", "pattern": "/^        initial={editing}$/", "language": "JavaScript", "kind": "field", "scope": "initial", "scopeKind": "class"}, {"_type": "tag", "name": "editorOpen", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29206/notes_frontend/src/pages/Notes.jsx", "pattern": "/^        open={editorOpen}$/", "language": "JavaScript", "kind": "field", "scope": "open", "scopeKind": "class"}, {"_type": "tag", "name": "onSave", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29206/notes_frontend/src/pages/Notes.jsx", "pattern": "/^        onSave={onSave}$/", "language": "JavaScript", "kind": "field", "scope": "onSave", "scopeKind": "class"}, {"_type": "tag", "name": "type === 'success' ? 'success' : 'error'}", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29206/notes_frontend/src/pages/Notes.jsx", "pattern": "/^      {toast ? <div className={`alert ${toast.type === 'success' ? 'success' : 'error'}`} role=\"/", "language": "JavaScript", "kind": "field", "scope": "toast.alert ${toast", "scopeKind": "class"}], "hash": "03ccda4a44c15523807cf5f1b4898f8b", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/pages/Notes.jsx", "fields": [{"name": "initial={editing}", "scope": "initial", "scopeKind": "class", "description": "unavailable"}, {"name": "open={editorOpen}", "scope": "open", "scopeKind": "class", "description": "unavailable"}, {"name": "onSave={onSave}", "scope": "onSave", "scopeKind": "class", "description": "unavailable"}, {"name": "{toast ? <div className={`alert ${toast.type === 'success' ? 'success' : 'error'}`} role=\"/", "scope": "toast.alert ${toast", "scopeKind": "class", "description": "unavailable"}]}